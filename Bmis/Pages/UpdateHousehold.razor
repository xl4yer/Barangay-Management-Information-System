﻿@using System.Net.Http
@using System.Net.Http.Json
@using System.Net.Http.Headers
@using Bmis.Models;
@using Newtonsoft.Json;
@inject NavigationManager Nav
@inject ILocalStorageService localStorage
@inject IJSRuntime jsRuntime
@inject ISnackbar snackBar

<MudDialog TitleClass="mud-primary" DisableSidePadding="true">
    <TitleContent>
        <MudText Typo="Typo.h6" Style="color:white">
           Update Household Information
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 500px;">
            <p1>*Household No.</p1>
            <MudTextField @bind-Value="@xhousehold.houseID" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField><br />
            <p1>*Household Head Name</p1>
            <MudTextField @bind-Value="@xhousehold.head" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField><br />
            <p1>*Purok</p1>
            <MudTextField @bind-Value="@xhousehold.purok" Lines="3" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="Submit">Update</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Parameter] public household xhousehold { get; set; } = new household();

    private async Task Cancel()
    {
        MudDialog.Cancel();
    }


    private async Task Submit()
    {
        int i = 0;
        try
        {
            var h = new household
                {
                    houseID = xhousehold.houseID,
                    head = xhousehold.head,
                    purok = xhousehold.purok
                };
            using (HttpClient client = new HttpClient())
            {
                client.BaseAddress = new Uri($"{Nav.BaseUri}");
                var json = JsonConvert.SerializeObject(h);
                HttpContent content = new StringContent(json);
                content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer",
                await localStorage.GetItemAsStringAsync("token"));
                HttpResponseMessage response = await client.PutAsync($"api/household/updatehousehold", content);
                if (response.IsSuccessStatusCode)
                {
                    string contentresponse = await response.Content.ReadAsStringAsync();
                    i = JsonConvert.DeserializeObject<int>(contentresponse);
                    if (i > 0)
                    {
                        await InvokeAsync(async () =>
                        {
                            snackBar.Add($"Done: Successfully Updated!", Severity.Success);
                            MudDialog.Cancel();
                            await InvokeAsync(StateHasChanged);
                        });
                    }
                }
                else
                {
                    await InvokeAsync(() =>
                    {
                        snackBar.Add($"Warning: {response.ReasonPhrase}", Severity.Warning);
                        StateHasChanged();
                    });
                }
            }
        }
        catch (Exception ex)
        {

        }
    }
}